// <auto-generated />
using System;
using CSGOSkinsWeb.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSGOSkinsWeb.Database.Migrations.Migrations
{
    [DbContext(typeof(SkinDbContext))]
    [Migration("20200720214218_NewMigration")]
    partial class NewMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CSGOSkinsWeb.Database.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category1")
                        .HasColumnName("category")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("CSGOSkinsWeb.Database.Models.Rarity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Rarityname")
                        .HasColumnName("rarityname")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Rarity");
                });

            modelBuilder.Entity("CSGOSkinsWeb.Database.Models.Skin", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<bool>("Haspattern")
                        .HasColumnName("haspattern")
                        .HasColumnType("bit");

                    b.Property<bool>("Hassouvenir")
                        .HasColumnName("hassouvenir")
                        .HasColumnType("bit");

                    b.Property<bool>("Hasstattrak")
                        .HasColumnName("hasstattrak")
                        .HasColumnType("bit");

                    b.Property<string>("Idstring")
                        .HasColumnName("idstring")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Imgsrc")
                        .HasColumnName("imgsrc")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<int?>("Rarity")
                        .HasColumnName("rarity")
                        .HasColumnType("int");

                    b.Property<string>("Skindescription")
                        .HasColumnName("skindescription")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Skinname")
                        .HasColumnName("skinname")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<int?>("Weapcase")
                        .HasColumnName("weapcase")
                        .HasColumnType("int");

                    b.Property<int?>("Weapcoll")
                        .HasColumnName("weapcoll")
                        .HasColumnType("int");

                    b.Property<int?>("Weapon")
                        .HasColumnName("weapon")
                        .HasColumnType("int");

                    b.Property<double?>("Wearend")
                        .HasColumnName("wearend")
                        .HasColumnType("float");

                    b.Property<double?>("Wearstart")
                        .HasColumnName("wearstart")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Rarity");

                    b.HasIndex("Weapcase");

                    b.HasIndex("Weapcoll");

                    b.HasIndex("Weapon");

                    b.ToTable("Skin");
                });

            modelBuilder.Entity("CSGOSkinsWeb.Database.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Category")
                        .HasColumnName("category")
                        .HasColumnType("int");

                    b.Property<string>("Imgsrc")
                        .HasColumnName("imgsrc")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Weapname")
                        .HasColumnName("weapname")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Idstring")
                        .HasColumnName("idstring")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.ToTable("Weapon");
                });

            modelBuilder.Entity("CSGOSkinsWeb.Database.Models.WeaponCase", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Casecollection")
                        .HasColumnName("casecollection")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Casename")
                        .HasColumnName("casename")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Idstring")
                        .HasColumnName("idstring")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Imgsrc")
                        .HasColumnName("imgsrc")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Introduced")
                        .HasColumnName("introduced")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("WeaponCase");
                });

            modelBuilder.Entity("CSGOSkinsWeb.Database.Models.WeaponCollection", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Collectionname")
                        .HasColumnName("collectionname")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Idstring")
                        .HasColumnName("idstring")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Imgsrc")
                        .HasColumnName("imgsrc")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Introduced")
                        .HasColumnName("introduced")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("WeaponCollection");
                });

            modelBuilder.Entity("CSGOSkinsWeb.Database.Models.Skin", b =>
                {
                    b.HasOne("CSGOSkinsWeb.Database.Models.Rarity", "RarityNavigation")
                        .WithMany("Skin")
                        .HasForeignKey("Rarity")
                        .HasConstraintName("FK__Skin__rarity__5812160E");

                    b.HasOne("CSGOSkinsWeb.Database.Models.WeaponCase", "WeapcaseNavigation")
                        .WithMany("Skin")
                        .HasForeignKey("Weapcase")
                        .HasConstraintName("FK__Skin__weapcase__59063A47");

                    b.HasOne("CSGOSkinsWeb.Database.Models.WeaponCollection", "WeapcollNavigation")
                        .WithMany("Skin")
                        .HasForeignKey("Weapcoll")
                        .HasConstraintName("FK__Skin__weapcoll__59FA5E80");

                    b.HasOne("CSGOSkinsWeb.Database.Models.Weapon", "WeaponNavigation")
                        .WithMany("Skin")
                        .HasForeignKey("Weapon")
                        .HasConstraintName("FK__Skin__weapon__571DF1D5");
                });

            modelBuilder.Entity("CSGOSkinsWeb.Database.Models.Weapon", b =>
                {
                    b.HasOne("CSGOSkinsWeb.Database.Models.Category", "CategoryNavigation")
                        .WithMany("Weapon")
                        .HasForeignKey("Category")
                        .HasConstraintName("FK__Weapon__category__2C3393D0");
                });
#pragma warning restore 612, 618
        }
    }
}
